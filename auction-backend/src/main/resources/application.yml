# application.yml

spring:
  # 애플리케이션 기본 설정
  application:
    name: auction-backend
  
  # Spring Cloud AWS 설정: Parameter Store 연동
  config:
    import: "aws-parameterstore:/auction/prod/"
    activate:
      on-profile: prod # prod 프로파일일 때 이 설정을 활성화

  # --- Production Profile (prod) 설정 ---
  # 데이터베이스 연결 설정
  datasource:
    url: jdbc:mariadb://auction-db.c5wk2um82f9a.ap-northeast-2.rds.amazonaws.com:3306/auction-db?useSSL=false
    username: admin
    # password는 Parameter Store에서 `db.password`로 자동 주입됨
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  # JPA 및 Hibernate 설정
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      # ❌ 절대로 update, create, create-drop 사용 금지
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  # ❌ 파일 업로드는 S3와 같은 외부 스토리지를 사용하도록 변경해야 함
  servlet:
    multipart:
      enabled: true

server:
  port: 8080
  error:
    # ❌ 프로덕션에서 스택 트레이스 노출 절대 금지
    include-stacktrace: never
    include-message: always

# JWT, Actuator, 로깅 레벨 등도 프로파일에 맞게 조정해야 함
# 예: logging.level.com.auction=INFO
tomcat:
    max-http-form-post-size: 20MB
    max-swallow-size: 20MB
    max-connections: 8192
    max-http-header-size: 8KB

# [JWT 설정]
jwt:
  secret: ${JWT_SECRET_KEY} # tG6+... -> 환경 변수로 관리
  access-token:
    expiration: 3600000 # 1시간
  refresh-token:
    expiration: 604800000 # 7일

# [Actuator 모니터링 설정]
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# [로깅 설정]
logging:
  level:
    com.auction: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# ===================================================================
# [토스페이먼츠 연동 설정] - 이 부분을 추가한다.
# ===================================================================
toss:
  payments:
    secret-key: ${TOSS_SECRET_KEY} # 발급받은 시크릿 키를 환경 변수로 관리
    confirm-url: https://api.tosspayments.com/v1/payments/confirm