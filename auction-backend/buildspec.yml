# buildspec.yml (Docker용)
version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      # AWS 계정 ID와 리전은 CodeBuild 환경 변수에서 자동으로 가져옵니다.
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 848196826138.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # 변수 설정
      - REPOSITORY_URI=848196826138.dkr.ecr.ap-northeast-2.amazonaws.com/auction-backend
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) # Git 커밋 해시 앞 7자리를 이미지 태그로 사용

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd auction-backend # Dockerfile이 있는 프로젝트 루트로 이동
      # Dockerfile을 사용하여 이미지 빌드
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images to ECR...
      # 빌드된 이미지를 ECR에 푸시
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # CodePipeline의 ECS 배포 단계에서 사용할 imagedefinitions.json 파일 생성
      - printf '[{"name":"auction-backend-container","imageUri":"%s"}]' "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  # [수정] base-directory를 추가하여 기준 경로를 명확히 합니다.
  base-directory: 'auction-backend'
  # [수정] base-directory를 기준으로 파일 경로를 단순화합니다.
  files:
    - imagedefinitions.json
